name: Deploy Test App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Shared Package
        run: pnpm --filter shared build

      - name: Build Backend
        run: pnpm --filter backend build

      - name: Build Frontend
        run: pnpm --filter frontend build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./packages/backend/Dockerfile
          push: true
          tags: 0n1x3/test-app-backend:latest

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./packages/frontend/Dockerfile
          push: true
          tags: 0n1x3/test-app-frontend:latest

      - name: SSH Deploy to Server
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          debug: true
          port: 22
          script_stop: true
          script: |
            whoami
            echo "Testing connection"
            mkdir -p /home/rdp-user/test/test-app
            cd /home/rdp-user/test/test-app || exit 1
            pwd
            ls -la
            
            # Создаем docker-compose.yml
            echo 'version: "3"' > docker-compose.yml
            echo '' >> docker-compose.yml
            echo 'services:' >> docker-compose.yml
            echo '  backend:' >> docker-compose.yml
            echo '    image: 0n1x3/test-app-backend:latest' >> docker-compose.yml
            echo '    restart: always' >> docker-compose.yml
            echo '    ports:' >> docker-compose.yml
            echo '      - "3005:3005"' >> docker-compose.yml
            echo '    environment:' >> docker-compose.yml
            echo '      - MONGODB_URI=${{ secrets.MONGODB_URI }}' >> docker-compose.yml
            echo '      - BOT_TOKEN=${{ secrets.BOT_TOKEN }}' >> docker-compose.yml
            echo '' >> docker-compose.yml
            echo '  frontend:' >> docker-compose.yml
            echo '    image: 0n1x3/test-app-frontend:latest' >> docker-compose.yml
            echo '    restart: always' >> docker-compose.yml
            echo '    ports:' >> docker-compose.yml
            echo '      - "3000:3000"' >> docker-compose.yml
            
            # Проверяем содержимое
            cat docker-compose.yml
            
            # Запускаем контейнеры
            docker-compose pull
            docker-compose up -d